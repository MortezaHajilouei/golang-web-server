definitions:
  models.User:
    properties:
      birthDay:
        type: string
      createdAt:
        type: string
      email:
        type: string
      enabled:
        type: boolean
      firstName:
        description: filter:"param:login;searchable;filterable;"
        type: string
      id:
        type: integer
      lastName:
        type: string
      mobile:
        type: string
      password:
        type: string
      passwordModified:
        type: string
      secretCode:
        type: string
      updatedAt:
        type: string
      verified:
        type: boolean
    type: object
  models.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.UserSignInInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.UserSignUpInput:
    properties:
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      password:
        minLength: 5
        type: string
      passwordConfirm:
        type: string
    required:
    - email
    - firstname
    - lastname
    - password
    - passwordConfirm
    type: object
  utils.ErrorMessage:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
paths:
  /user/:
    get:
      description: get Profile detail
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
      security:
      - ApiKeyAuth: []
      summary: Show My Profile Detail
      tags:
      - users
  /user/{id}:
    get:
      consumes:
      - application/json
      description: get User detail
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
      security:
      - ApiKeyAuth: []
      summary: Show User Detail
      tags:
      - users
  /user/login/:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: SignIn
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/models.UserSignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
      summary: Login user
      tags:
      - users
  /user/register/:
    post:
      consumes:
      - application/json
      description: signup user
      parameters:
      - description: Signup
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/models.UserSignUpInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UserResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
      summary: Register new user
      tags:
      - users
  /users/:
    get:
      consumes:
      - application/json
      description: get users list
      parameters:
      - in: query
        name: filter
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: order_by
        type: string
      - in: query
        name: order_direction
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
      security:
      - ApiKeyAuth: []
      summary: Show Users List
      tags:
      - users
swagger: "2.0"
