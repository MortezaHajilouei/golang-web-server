definitions:
  models.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      updated_at:
        type: string
    type: object
  models.UserSignInInput:
    properties:
      email:
        default: email@example.com
        type: string
      password:
        default: password
        type: string
    required:
    - email
    - password
    type: object
  models.UserSignUpInput:
    properties:
      address:
        default: تهران
        type: string
      bankId:
        default: "2"
        type: string
      date:
        default: "1990-01-01T00:00:00.0Z"
        type: string
      email:
        default: Email@example.com
        type: string
      firstname:
        default: John
        type: string
      iBan:
        default: "1"
        type: string
      lastname:
        default: Lenon
        type: string
      national_code:
        default: "0000000000"
        maxLength: 10
        minLength: 10
        type: string
      password:
        default: password
        minLength: 5
        type: string
      passwordConfirm:
        default: password
        minLength: 5
        type: string
      phone:
        default: "09129999999"
        maxLength: 11
        minLength: 11
        type: string
      telephone:
        default: "02122222222"
        type: string
    required:
    - address
    - bankId
    - date
    - email
    - firstname
    - iBan
    - lastname
    - national_code
    - password
    - passwordConfirm
    - phone
    - telephone
    type: object
  models.UserSignUpInputAdmin:
    properties:
      address:
        default: تهران
        type: string
      date:
        default: "1990-01-01T00:00:00.0Z"
        type: string
      email:
        default: Email@example.com
        type: string
      firstname:
        default: John
        type: string
      lastname:
        default: Lenon
        type: string
      national_code:
        default: "0000000000"
        maxLength: 10
        minLength: 10
        type: string
      password:
        default: password
        minLength: 5
        type: string
      passwordConfirm:
        default: password
        minLength: 5
        type: string
      phone:
        default: "09129999999"
        maxLength: 11
        minLength: 11
        type: string
      telephone:
        default: "02122222222"
        type: string
      username:
        default: john
        type: string
    required:
    - address
    - date
    - email
    - firstname
    - lastname
    - national_code
    - password
    - passwordConfirm
    - phone
    - telephone
    - username
    type: object
  models.UserSignUpInputLegal:
    properties:
      address:
        default: تهران
        type: string
      bankId:
        default: "1"
        type: string
      date:
        default: "1990-01-01T00:00:00.0Z"
        type: string
      economyNum:
        default: "1111111111"
        type: string
      email:
        default: Email@example.com
        type: string
      firstname:
        default: John
        type: string
      guildTitle:
        default: GuildTitle
        type: string
      iBan:
        default: "1"
        type: string
      lastname:
        default: Lenon
        type: string
      national_code:
        default: "0000000000"
        maxLength: 10
        minLength: 10
        type: string
      nationalNum:
        default: "1111111111"
        type: string
      password:
        default: password
        minLength: 5
        type: string
      passwordConfirm:
        default: password
        minLength: 5
        type: string
      phone:
        default: "09129999999"
        maxLength: 11
        minLength: 11
        type: string
      registrationNum:
        default: "1111111111"
        type: string
      telephone:
        default: "02122222222"
        type: string
      zipCode:
        default: "1111111111"
        type: string
    required:
    - address
    - bankId
    - date
    - economyNum
    - email
    - firstname
    - guildTitle
    - iBan
    - lastname
    - nationalNum
    - national_code
    - password
    - passwordConfirm
    - phone
    - registrationNum
    - telephone
    - zipCode
    type: object
  utils.ErrorMessage:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
paths:
  /user/login/:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: SignIn
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/models.UserSignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
      summary: Login user
      tags:
      - users
  /user/me/:
    get:
      description: get Profile detail
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
      security:
      - JWT: []
      summary: Show My Profile Detail
      tags:
      - users
  /user/register/:
    post:
      consumes:
      - application/json
      description: signup user
      parameters:
      - description: Signup
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/models.UserSignUpInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UserResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
      summary: Register new user
      tags:
      - users
  /user/register/admin:
    post:
      consumes:
      - application/json
      description: signup admin user
      parameters:
      - description: Signup
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/models.UserSignUpInputAdmin'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UserResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
      summary: Register new admin user
      tags:
      - users
  /user/register/legal:
    post:
      consumes:
      - application/json
      description: signup legal user
      parameters:
      - description: Signup
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/models.UserSignUpInputLegal'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UserResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/utils.ErrorMessage'
      summary: Register new legal user
      tags:
      - users
securityDefinitions:
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
